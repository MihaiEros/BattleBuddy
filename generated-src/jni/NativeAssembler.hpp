// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from battlebuddy.djinni

#pragma once

#include "Assembler.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeAssembler final : ::djinni::JniInterface<::battlebuddy::Assembler, NativeAssembler> {
public:
    using CppType = std::shared_ptr<::battlebuddy::Assembler>;
    using CppOptType = std::shared_ptr<::battlebuddy::Assembler>;
    using JniType = jobject;

    using Boxed = NativeAssembler;

    ~NativeAssembler();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeAssembler>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeAssembler>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeAssembler();
    friend ::djinni::JniClass<NativeAssembler>;
    friend ::djinni::JniInterface<::battlebuddy::Assembler, NativeAssembler>;

};

}  // namespace djinni_generated
